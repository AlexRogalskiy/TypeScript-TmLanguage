original file
-----------------------------------
class Foo {
  prop = () =>
    this.condition
      ? fn(this.value)
      : fn(this.value)
}
-----------------------------------

Grammar: TypeScript.tmLanguage
-----------------------------------
>class Foo {
 ^^^^^
 source.ts meta.class.ts storage.type.class.ts
      ^
      source.ts meta.class.ts
       ^^^
       source.ts meta.class.ts entity.name.type.class.ts
          ^
          source.ts meta.class.ts
           ^
           source.ts meta.class.ts punctuation.definition.block.ts
>  prop = () =>
 ^^
 source.ts meta.class.ts meta.field.declaration.ts
   ^^^^
   source.ts meta.class.ts meta.field.declaration.ts meta.definition.property.ts entity.name.function.ts
       ^
       source.ts meta.class.ts meta.field.declaration.ts
        ^
        source.ts meta.class.ts meta.field.declaration.ts keyword.operator.assignment.ts
         ^
         source.ts meta.class.ts meta.field.declaration.ts meta.arrow.ts
          ^
          source.ts meta.class.ts meta.field.declaration.ts meta.arrow.ts meta.parameters.ts punctuation.definition.parameters.begin.ts
           ^
           source.ts meta.class.ts meta.field.declaration.ts meta.arrow.ts meta.parameters.ts punctuation.definition.parameters.end.ts
            ^
            source.ts meta.class.ts meta.field.declaration.ts meta.arrow.ts
             ^^
             source.ts meta.class.ts meta.field.declaration.ts meta.arrow.ts storage.type.function.arrow.ts
>    this.condition
 ^^^^
 source.ts meta.class.ts meta.field.declaration.ts meta.arrow.ts
     ^^^^
     source.ts meta.class.ts meta.field.declaration.ts variable.language.this.ts
         ^
         source.ts meta.class.ts meta.field.declaration.ts punctuation.accessor.ts
          ^^^^^^^^^
          source.ts meta.class.ts meta.field.declaration.ts variable.other.property.ts
>      ? fn(this.value)
 ^^^^^^
 source.ts meta.class.ts
       ^
       source.ts meta.class.ts keyword.operator.ternary.ts
        ^
        source.ts meta.class.ts
         ^^
         source.ts meta.class.ts meta.function-call.ts entity.name.function.ts
           ^
           source.ts meta.class.ts meta.brace.round.ts
            ^^^^
            source.ts meta.class.ts variable.language.this.ts
                ^
                source.ts meta.class.ts punctuation.accessor.ts
                 ^^^^^
                 source.ts meta.class.ts support.variable.property.dom.ts
                      ^
                      source.ts meta.class.ts meta.brace.round.ts
>      : fn(this.value)
 ^^^^^^
 source.ts meta.class.ts
       ^
       source.ts meta.class.ts keyword.operator.ternary.ts
        ^
        source.ts meta.class.ts
         ^^
         source.ts meta.class.ts meta.function-call.ts entity.name.function.ts
           ^
           source.ts meta.class.ts meta.brace.round.ts
            ^^^^
            source.ts meta.class.ts variable.language.this.ts
                ^
                source.ts meta.class.ts punctuation.accessor.ts
                 ^^^^^
                 source.ts meta.class.ts support.variable.property.dom.ts
                      ^
                      source.ts meta.class.ts meta.brace.round.ts
>}
 ^
 source.ts meta.class.ts punctuation.definition.block.ts