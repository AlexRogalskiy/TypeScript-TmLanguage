original file
-----------------------------------
type Union<A,B> = A|B;

const fn = (
// newline here
): Array<Union<Array<number>, string>>=>{
    try {
        return [[1]]
    } catch (e){
        return [[1]]
    }
}
-----------------------------------

Grammar: TypeScript.tmLanguage
-----------------------------------
>type Union<A,B> = A|B;
 ^^^^
 source.ts meta.type.declaration.ts storage.type.type.ts
     ^
     source.ts meta.type.declaration.ts
      ^^^^^
      source.ts meta.type.declaration.ts entity.name.type.alias.ts
           ^
           source.ts meta.type.declaration.ts meta.type.parameters.ts punctuation.definition.typeparameters.begin.ts
            ^
            source.ts meta.type.declaration.ts meta.type.parameters.ts entity.name.type.ts
             ^
             source.ts meta.type.declaration.ts meta.type.parameters.ts punctuation.separator.comma.ts
              ^
              source.ts meta.type.declaration.ts meta.type.parameters.ts entity.name.type.ts
               ^
               source.ts meta.type.declaration.ts meta.type.parameters.ts punctuation.definition.typeparameters.end.ts
                ^
                source.ts meta.type.declaration.ts
                 ^
                 source.ts meta.type.declaration.ts keyword.operator.assignment.ts
                  ^
                  source.ts meta.type.declaration.ts
                   ^
                   source.ts meta.type.declaration.ts entity.name.type.ts
                    ^
                    source.ts meta.type.declaration.ts keyword.operator.type.ts
                     ^
                     source.ts meta.type.declaration.ts entity.name.type.ts
                      ^
                      source.ts punctuation.terminator.statement.ts
>
 ^
 source.ts
>const fn = (
 ^^^^^
 source.ts meta.var.expr.ts storage.type.ts
      ^
      source.ts meta.var.expr.ts
       ^^
       source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.definition.variable.ts variable.other.constant.ts entity.name.function.ts
         ^
         source.ts meta.var.expr.ts meta.var-single-variable.expr.ts
          ^
          source.ts meta.var.expr.ts keyword.operator.assignment.ts
           ^
           source.ts meta.var.expr.ts
            ^
            source.ts meta.var.expr.ts meta.brace.round.ts
>// newline here
 ^^
 source.ts meta.var.expr.ts comment.line.double-slash.ts punctuation.definition.comment.ts
   ^^^^^^^^^^^^^
   source.ts meta.var.expr.ts comment.line.double-slash.ts
>): Array<Union<Array<number>, string>>=>{
 ^
 source.ts meta.var.expr.ts meta.brace.round.ts
  ^
  source.ts meta.var.expr.ts meta.arrow.ts meta.return.type.arrow.ts keyword.operator.type.annotation.ts
   ^
   source.ts meta.var.expr.ts meta.arrow.ts meta.return.type.arrow.ts
    ^^^^^
    source.ts meta.var.expr.ts meta.arrow.ts meta.return.type.arrow.ts entity.name.type.ts
         ^
         source.ts meta.var.expr.ts meta.arrow.ts meta.return.type.arrow.ts meta.type.parameters.ts punctuation.definition.typeparameters.begin.ts
          ^^^^^
          source.ts meta.var.expr.ts meta.arrow.ts meta.return.type.arrow.ts meta.type.parameters.ts entity.name.type.ts
               ^
               source.ts meta.var.expr.ts meta.arrow.ts meta.return.type.arrow.ts meta.type.parameters.ts meta.type.parameters.ts punctuation.definition.typeparameters.begin.ts
                ^^^^^
                source.ts meta.var.expr.ts meta.arrow.ts meta.return.type.arrow.ts meta.type.parameters.ts meta.type.parameters.ts entity.name.type.ts
                     ^
                     source.ts meta.var.expr.ts meta.arrow.ts meta.return.type.arrow.ts meta.type.parameters.ts meta.type.parameters.ts meta.type.parameters.ts punctuation.definition.typeparameters.begin.ts
                      ^^^^^^
                      source.ts meta.var.expr.ts meta.arrow.ts meta.return.type.arrow.ts meta.type.parameters.ts meta.type.parameters.ts meta.type.parameters.ts support.type.primitive.ts
                            ^
                            source.ts meta.var.expr.ts meta.arrow.ts meta.return.type.arrow.ts meta.type.parameters.ts meta.type.parameters.ts meta.type.parameters.ts punctuation.definition.typeparameters.end.ts
                             ^
                             source.ts meta.var.expr.ts meta.arrow.ts meta.return.type.arrow.ts meta.type.parameters.ts meta.type.parameters.ts punctuation.separator.comma.ts
                              ^
                              source.ts meta.var.expr.ts meta.arrow.ts meta.return.type.arrow.ts meta.type.parameters.ts meta.type.parameters.ts
                               ^^^^^^
                               source.ts meta.var.expr.ts meta.arrow.ts meta.return.type.arrow.ts meta.type.parameters.ts meta.type.parameters.ts support.type.primitive.ts
                                     ^
                                     source.ts meta.var.expr.ts meta.arrow.ts meta.return.type.arrow.ts meta.type.parameters.ts meta.type.parameters.ts punctuation.definition.typeparameters.end.ts
                                      ^
                                      source.ts meta.var.expr.ts meta.arrow.ts meta.return.type.arrow.ts meta.type.parameters.ts punctuation.definition.typeparameters.end.ts
                                       ^^
                                       source.ts meta.var.expr.ts meta.arrow.ts storage.type.function.arrow.ts
                                         ^
                                         source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts punctuation.definition.block.ts
>    try {
 ^^^^
 source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts
     ^^^
     source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts keyword.control.trycatch.ts
        ^
        source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts
         ^
         source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts meta.block.ts punctuation.definition.block.ts
>        return [[1]]
 ^^^^^^^^
 source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts meta.block.ts
         ^^^^^^
         source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts meta.block.ts keyword.control.flow.ts
               ^
               source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts meta.block.ts meta.array.literal.ts
                ^
                source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts meta.block.ts meta.array.literal.ts meta.brace.square.ts
                 ^
                 source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts meta.block.ts meta.array.literal.ts meta.array.literal.ts meta.brace.square.ts
                  ^
                  source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts meta.block.ts meta.array.literal.ts meta.array.literal.ts constant.numeric.decimal.ts
                   ^
                   source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts meta.block.ts meta.array.literal.ts meta.array.literal.ts meta.brace.square.ts
                    ^
                    source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts meta.block.ts meta.array.literal.ts meta.brace.square.ts
>    } catch (e){
 ^^^^
 source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts meta.block.ts
     ^
     source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts meta.block.ts punctuation.definition.block.ts
      ^
      source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts
       ^^^^^
       source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts keyword.control.trycatch.ts
            ^
            source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts
             ^
             source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts meta.brace.round.ts
              ^
              source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts variable.other.readwrite.ts
               ^
               source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts meta.brace.round.ts
                ^
                source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts meta.block.ts punctuation.definition.block.ts
>        return [[1]]
 ^^^^^^^^
 source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts meta.block.ts
         ^^^^^^
         source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts meta.block.ts keyword.control.flow.ts
               ^
               source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts meta.block.ts meta.array.literal.ts
                ^
                source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts meta.block.ts meta.array.literal.ts meta.brace.square.ts
                 ^
                 source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts meta.block.ts meta.array.literal.ts meta.array.literal.ts meta.brace.square.ts
                  ^
                  source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts meta.block.ts meta.array.literal.ts meta.array.literal.ts constant.numeric.decimal.ts
                   ^
                   source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts meta.block.ts meta.array.literal.ts meta.array.literal.ts meta.brace.square.ts
                    ^
                    source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts meta.block.ts meta.array.literal.ts meta.brace.square.ts
>    }
 ^^^^
 source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts meta.block.ts
     ^
     source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts meta.block.ts punctuation.definition.block.ts
>}
 ^
 source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts punctuation.definition.block.ts