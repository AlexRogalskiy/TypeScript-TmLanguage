original file
-----------------------------------
type Foo = string

(async () => {
	let foo: string

	try {
		foo = "hello"
	} catch (error) {
		// Nothing
	}
})()
-----------------------------------

Grammar: TypeScript.tmLanguage
-----------------------------------
>type Foo = string
 ^^^^
 source.ts meta.type.declaration.ts storage.type.type.ts
     ^
     source.ts meta.type.declaration.ts
      ^^^
      source.ts meta.type.declaration.ts entity.name.type.alias.ts
         ^
         source.ts meta.type.declaration.ts
          ^
          source.ts meta.type.declaration.ts keyword.operator.assignment.ts
           ^
           source.ts meta.type.declaration.ts
            ^^^^^^
            source.ts meta.type.declaration.ts support.type.primitive.ts
>
 ^
 source.ts
>(async () => {
 ^
 source.ts meta.brace.round.ts
  ^^^^^
  source.ts meta.arrow.ts storage.modifier.async.ts
       ^
       source.ts meta.arrow.ts
        ^
        source.ts meta.arrow.ts meta.parameters.ts punctuation.definition.parameters.begin.ts
         ^
         source.ts meta.arrow.ts meta.parameters.ts punctuation.definition.parameters.end.ts
          ^
          source.ts meta.arrow.ts
           ^^
           source.ts meta.arrow.ts storage.type.function.arrow.ts
             ^
             source.ts meta.arrow.ts
              ^
              source.ts meta.arrow.ts meta.block.ts punctuation.definition.block.ts
>	let foo: string
 ^
 source.ts meta.arrow.ts meta.block.ts
  ^^^
  source.ts meta.arrow.ts meta.block.ts meta.var.expr.ts storage.type.ts
     ^
     source.ts meta.arrow.ts meta.block.ts meta.var.expr.ts
      ^^^
      source.ts meta.arrow.ts meta.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.definition.variable.ts variable.other.readwrite.ts
         ^
         source.ts meta.arrow.ts meta.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.type.annotation.ts keyword.operator.type.annotation.ts
          ^
          source.ts meta.arrow.ts meta.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.type.annotation.ts
           ^^^^^^
           source.ts meta.arrow.ts meta.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.type.annotation.ts support.type.primitive.ts
>
 ^
 source.ts meta.arrow.ts meta.block.ts
>	try {
 ^
 source.ts meta.arrow.ts meta.block.ts
  ^^^
  source.ts meta.arrow.ts meta.block.ts keyword.control.trycatch.ts
     ^
     source.ts meta.arrow.ts meta.block.ts
      ^
      source.ts meta.arrow.ts meta.block.ts meta.block.ts punctuation.definition.block.ts
>		foo = "hello"
 ^^
 source.ts meta.arrow.ts meta.block.ts meta.block.ts
   ^^^
   source.ts meta.arrow.ts meta.block.ts meta.block.ts variable.other.readwrite.ts
      ^
      source.ts meta.arrow.ts meta.block.ts meta.block.ts
       ^
       source.ts meta.arrow.ts meta.block.ts meta.block.ts keyword.operator.assignment.ts
        ^
        source.ts meta.arrow.ts meta.block.ts meta.block.ts
         ^
         source.ts meta.arrow.ts meta.block.ts meta.block.ts string.quoted.double.ts punctuation.definition.string.begin.ts
          ^^^^^
          source.ts meta.arrow.ts meta.block.ts meta.block.ts string.quoted.double.ts
               ^
               source.ts meta.arrow.ts meta.block.ts meta.block.ts string.quoted.double.ts punctuation.definition.string.end.ts
>	} catch (error) {
 ^
 source.ts meta.arrow.ts meta.block.ts meta.block.ts
  ^
  source.ts meta.arrow.ts meta.block.ts meta.block.ts punctuation.definition.block.ts
   ^
   source.ts meta.arrow.ts meta.block.ts
    ^^^^^
    source.ts meta.arrow.ts meta.block.ts keyword.control.trycatch.ts
         ^
         source.ts meta.arrow.ts meta.block.ts
          ^
          source.ts meta.arrow.ts meta.block.ts meta.brace.round.ts
           ^^^^^
           source.ts meta.arrow.ts meta.block.ts variable.other.readwrite.ts
                ^
                source.ts meta.arrow.ts meta.block.ts meta.brace.round.ts
                 ^
                 source.ts meta.arrow.ts meta.block.ts
                  ^
                  source.ts meta.arrow.ts meta.block.ts meta.block.ts punctuation.definition.block.ts
>		// Nothing
 ^^
 source.ts meta.arrow.ts meta.block.ts meta.block.ts punctuation.whitespace.comment.leading.ts
   ^^
   source.ts meta.arrow.ts meta.block.ts meta.block.ts comment.line.double-slash.ts punctuation.definition.comment.ts
     ^^^^^^^^
     source.ts meta.arrow.ts meta.block.ts meta.block.ts comment.line.double-slash.ts
>	}
 ^
 source.ts meta.arrow.ts meta.block.ts meta.block.ts
  ^
  source.ts meta.arrow.ts meta.block.ts meta.block.ts punctuation.definition.block.ts
>})()
 ^
 source.ts meta.arrow.ts meta.block.ts punctuation.definition.block.ts
  ^
  source.ts meta.brace.round.ts
   ^
   source.ts meta.brace.round.ts
    ^
    source.ts meta.brace.round.ts